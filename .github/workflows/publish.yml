name: Publish

# Controls when the action will run. 
on:
  # Triggers the workflow on new SemVer tags
  push:
    tags: 
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-alpha+'
      - 'v[0-9]+.[0-9]+.[0-9]+-beta+'

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 'stable'
      - name: Install dependencies
        run: |
          sudo apt update && sudo apt install -y gcc-aarch64-linux-gnu
      - name: Build amd64
        env:
          CGO_ENABLED: 1
          GOOS: linux
          GOARCH: amd64
        run: |
          mkdir -p release
          ZIP_OUTPUT=release/renterd_${GOOS}_${GOARCH}.zip
          go build -tags='netgo' -trimpath -o bin/ -a -ldflags '-s -w -linkmode external -extldflags "-static"' ./cmd/renterd
          cp README.md LICENSE bin/
          zip -qj $ZIP_OUTPUT bin/*
      - name: Build arm64
        env:
          CGO_ENABLED: 1
          GOOS: linux
          GOARCH: arm64
          CC: aarch64-linux-gnu-gcc
        run: |
          mkdir -p release
          ZIP_OUTPUT=release/renterd_${GOOS}_${GOARCH}.zip
          go build -tags='netgo' -trimpath -o bin/ -a -ldflags '-s -w -linkmode external -extldflags "-static"' ./cmd/renterd
          cp README.md LICENSE bin/
          zip -qj $ZIP_OUTPUT bin/*
      - uses: actions/upload-artifact@v3
        with:
          name: renterd
          path: release/
  build-mac: 
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 'stable'
      - name: Build amd64
        env:
          CGO_ENABLED: 1
          GOOS: darwin
          GOARCH: amd64
        run: |
          ZIP_OUTPUT=release/renterd_${GOOS}_${GOARCH}.zip
          mkdir -p release
          go build -tags='netgo' -trimpath -o bin/ -a -ldflags '-s -w' ./cmd/renterd
          cp README.md LICENSE bin/
          ditto -ck bin $ZIP_OUTPUT
      - name: Build arm64
        env:
          CGO_ENABLED: 1
          GOOS: darwin
          GOARCH: arm64
        run: |
          ZIP_OUTPUT=release/renterd_${GOOS}_${GOARCH}.zip
          mkdir -p release
          go build -tags='netgo' -trimpath -o bin/ -a -ldflags '-s -w' ./cmd/renterd
          cp README.md LICENSE bin/
          ditto -ck bin $ZIP_OUTPUT
      - uses: actions/upload-artifact@v3
        with:
          name: renterd
          path: release/
  build-windows: 
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 'stable'
      - name: Build amd64
        env:
          CGO_ENABLED: 1
          GOOS: windows
          GOARCH: amd64
        shell: bash
        run: |
          mkdir -p release
          ZIP_OUTPUT=release/renterd_${GOOS}_${GOARCH}.zip
          go build -tags='netgo' -trimpath -o bin/ -a -ldflags '-s -w -linkmode external -extldflags "-static"' ./cmd/renterd
          cp README.md LICENSE bin/
          7z a $ZIP_OUTPUT bin/*
      - uses: actions/upload-artifact@v3
        with:
          name: renterd
          path: release/
